!function(){return function e(t,s,n){function r(i,o){if(!s[i]){if(!t[i]){var u="function"==typeof require&&require;if(!o&&u)return u(i,!0);if(a)return a(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var l=s[i]={exports:{}};t[i][0].call(l.exports,function(e){return r(t[i][1][e]||e)},l,l.exports,e,t,s,n)}return s[i].exports}for(var a="function"==typeof require&&require,i=0;i<n.length;i++)r(n[i]);return r}}()({1:[function(e,t,s){const{fixed:n}=e("../src/modules/constants.js"),{is:r,does:a,provide:i}=e("../src/modules/utility.js"),{Product:o}=e("../src/modules/product.js"),{City:u}=e("../src/modules/city.js"),{Player:c}=e("../src/modules/player.js"),{Train:l}=e("../src/modules/train.js"),{Route:m}=e("./modules/route.js");class g{constructor(e,t,s,n){let i=a.arrayOnlyContainSingleType(e,c)?e:[c.empty()],m=a.arrayOnlyContainSingleType(t,u)?t:[u.empty()],g=a.arrayOnlyContainSingleType(s,o)?s:[o.empty()],p=a.arrayOnlyContainSingleType(n,l)?n:[l.empty()],h=1,d=i[0].getID();this.getPlayers=(()=>i),this.getCities=(()=>m),this.getProducts=(()=>g),this.getTrains=(()=>p),this.getTurns=(()=>h),this.getCurrentPlayerID=(()=>d),this.getCurrentPlayer=(()=>{for(let e=0;e<i.length;e++)if(i[e].getID()===d)return i[e];return c.empty()}),this.setCurrentPlayerID=(e=>{r.string(e)&&(d=e)}),this.incrementTotalTurns=(()=>h++),this.resetNewRoute()}updateNewRoute(){this.newRoute.potentialRoutes=this.getPlayerPotentialRoutes(),this.newRoute.routedCities=this.getPlayerRoutedCities(),this.newRoute.toCity=this.newRoute.potentialRoutes.length>0?this.newRoute.potentialRoutes[0][n.potentialRoute.city]:u.empty()}resetNewRoute(){this.newRoute={potentialRoutes:[],routedCities:[],currentRoute:{[n.potentialRoute.city]:u.empty(),[n.potentialRoute.distance]:0,[n.potentialRoute.goldCost]:0,[n.potentialRoute.turnCost]:0},toCity:u.empty(),fromCity:this.getCurrentPlayer().getStartCity(),train:l.empty(),fromCargo:[],toCargo:[]}}addRouteToPlayerQueue(){const e=this.getCurrentPlayer(),{fromCity:t,toCity:s,train:r,fromCargo:a,toCargo:i,currentRoute:o}=this.newRoute,u=new m(t,s,{[n.cargo.from]:a,[n.cargo.to]:i},r,o[n.potentialRoute.distance],o[n.potentialRoute.goldCost]),c={[n.queue.route]:u,[n.queue.turnCost]:o[n.potentialRoute.turnCost]};e.removeGold(o[n.potentialRoute.goldCost]+r.getCost()),e.addToQueue(c)}removeRouteFromPlayerQueue(e){if(e){const t=this.getCurrentPlayer();t.addGold(e[0].getCost()+e[0].getTrain().getCost()),t.removeFromQueue(e)}}getPlayerPotentialRoutes(){return this.getCurrentPlayer().getArrayOfRouteableCities(this.newRoute.fromCity,this.getCities())}getPlayerRoutedCities(){return this.getCurrentPlayer().getArrayOfRoutedCities()}handlePlayerEndTurn(){const e=this.getCurrentPlayer();e.saveCurrentFinance(),e.incrementTotalTurns(),e.clearCurrentFinance(),e.handleQueue(),e.handleRoutes(),e.handleRouteFinance()}endTurn(){this.handlePlayerEndTurn();const e=this.getCurrentPlayerID(),t=this.getPlayers();this.incrementTotalTurns();for(let s=0;s<t.length;s++)if(t[s].getID()===e){if(s===t.length-1){this.setCurrentPlayerID(t[0].getID());break}this.setCurrentPlayerID(t[s+1].getID());break}}static create(e){const t=l.generateArray(),s=o.generateArray(),n=u.generateArray(s),a=[],m=[];return r.array(e)?e.forEach(e=>{let t=i.startCity(n,m);m.push(t),a.push(new c(e,t))}):a.push(c.empty()),new g(a,n,s,t)}}window.NardisGame=g,window.NardisIs=r,window.NardisFixed=n},{"../src/modules/city.js":2,"../src/modules/constants.js":4,"../src/modules/player.js":5,"../src/modules/product.js":6,"../src/modules/train.js":8,"../src/modules/utility.js":9,"./modules/route.js":7}],2:[function(e,t,s){const{metaCities:n,fixed:r}=e("../../src/modules/constants.js"),{is:a,does:i,provide:o}=e("../../src/modules/utility.js"),{Component:u}=e("../../src/modules/component.js"),{Product:c}=e("../../src/modules/product.js");class l extends u{constructor(e,t,s,n,u,l){super(e);let m=a.number(t)?t:r.emptyCoordinate,g=a.number(s)?s:r.emptyCoordinate,p=a.number(n)?n:0,h=i.arrayOnlyContainSingleType(u,c)?u:[],d=i.arrayOnlyContainSingleType(l,c)?l:[],y=r.maxCityRoutes.hasOwnProperty(p)?r.maxCityRoutes[p]:0;this.isStartCity=1===p,this.getPhi=(()=>m),this.getGamma=(()=>g),this.getSize=(()=>p),this.getSupply=(()=>h),this.getDemand=(()=>d),this.getMaxCurrentRoutes=(()=>y),this.getCurrentRoutesCount=(()=>0),this.getCoordinatesInRadians=(()=>[o.radianFromDegree(m),o.radianFromDegree(g)])}isMaxRoutesReached(){return this.getCurrentRoutesCount()>=this.getMaxCurrentRoutes()}distanceTo(e){let t=-1;if(a.instance(e,l)&&this!==e){const[s,n,a,i]=[...this.getCoordinatesInRadians(),...e.getCoordinatesInRadians()],o=Math.abs(a-s),u=Math.abs(i-n),c=Math.pow(Math.sin(o/2),2)+Math.cos(s)*Math.cos(a)*Math.pow(Math.sin(u/2),2),l=2*Math.atan2(Math.sqrt(Math.abs(c)),Math.sqrt(Math.abs(1-c)));t=Math.round(r.earthRadius*l)}return t}productInCityDemand(e){const t=this.getDemand();for(let s=0;s<t.length;s++)if(t[s].isEqual(e))return!0;return!1}static generateArray(e,t=n){const s=[];if(a.array(t)&&a.array(e)&&i.arrayOnlyContainSingleType(e,c))for(let n=0;n<t.length;n++){let r=t[n],a=c.matchStringWithProductName(r.supply,e),i=c.matchStringWithProductName(r.demand,e);s.push(new l(r.name,r.phi,r.gamma,r.size,a,i))}return s}static empty(){return new l}}t.exports={City:l}},{"../../src/modules/component.js":3,"../../src/modules/constants.js":4,"../../src/modules/product.js":6,"../../src/modules/utility.js":9}],3:[function(e,t,s){const{create:n,provide:r,is:a}=e("../../src/modules/utility.js");t.exports={Component:class{constructor(e){let t=n.id(),s=a.string(e)?r.capitalization(e):"";this.getID=(()=>t),this.getName=(()=>s)}isEqual(e){try{return this.getID()===e.getID()}catch(e){return!1}}}}},{"../../src/modules/utility.js":9}],4:[function(e,t,s){t.exports={metaCities:[{name:"carlisle",phi:54.88,gamma:-2.93,size:1,supply:["passengers","corn","textiles"],demand:["passengers","fish","paper"]},{name:"whitby",phi:54.4863,gamma:.6133,size:1,supply:["passengers","fish","beer"],demand:["passengers","grain","coal"]},{name:"dover",phi:51.1337,gamma:1.3,size:2,supply:["passengers","fish","paper"],demand:["passengers","corn","beer"]},{name:"exeter",phi:50.7004,gamma:-3.53,size:2,supply:["passengers","fish","corn"],demand:["passengers","grain","textiles"]},{name:"derby",phi:52.9333,gamma:-1.5,size:2,supply:["passengers","textiles","ore"],demand:["passengers","fish","beer"]},{name:"norwich",phi:52.6304,gamma:1.3,size:2,supply:["passengers","beer","coal"],demand:["passengers","textiles","fish"]},{name:"oxford",phi:51.7704,gamma:-1.25,size:2,supply:["passengers","steel","technology"],demand:["passengers","ore","coal"]},{name:"cambridge",phi:52.2004,gamma:.1166,size:2,supply:["passengers","technology","paper"],demand:["passengers","medicine","luxury_goods"]},{name:"newcastle",phi:55.0004,gamma:-1.6,size:3,supply:["passengers","steel","fish"],demand:["passengers","ore","technology"]},{name:"york",phi:53.9704,gamma:-1.08,size:3,supply:["passengers","grain","corn"],demand:["passengers","medicine","technology"]},{name:"nottingham",phi:52.9703,gamma:-1.17,size:3,supply:["passengers","cars","beer"],demand:["passengers","steel","fish"]},{name:"bighton",phi:50.8303,gamma:-.17,size:3,supply:["passengers","textiles","beer"],demand:["passengers","luxury_goods","fish"]},{name:"southampton",phi:50.9,gamma:-1.4,size:3,supply:["passengers","grain","corn","textiles"],demand:["passengers","fish","medicine","government_contract"]},{name:"plymouth",phi:50.3854,gamma:-4.16,size:3,supply:["passengers","coal","steel"],demand:["passengers","government_contract","beer","corn"]},{name:"leicester",phi:52.63,gamma:-1.1332,size:4,supply:["passengers","coal","ore"],demand:["passengers","government_contract","medicine"]},{name:"bristol",phi:51.45,gamma:-2.5833,size:4,supply:["passengers","paper","arms"],demand:["passengers","steel","ore","grain"]},{name:"leeds",phi:53.83,gamma:-1.58,size:4,supply:["passengers","paper","medicine"],demand:["passengers","textiles","fish"]},{name:"manchester",phi:53.5004,gamma:-2.248,size:5,supply:["passengers","technology","textiles"],demand:["passengers","luxury_goods","paper"]},{name:"liverpool",phi:53.416,gamma:-2.918,size:5,supply:["passengers","fish","luxury_goods"],demand:["passengers","medicine","technology","arms"]},{name:"birmingham",phi:52.475,gamma:-1.92,size:5,supply:["passengers","government_contract","medicine"],demand:["passengers","cars","paper","technology"]},{name:"london",phi:51.5,gamma:-.1167,size:6,supply:["passengers","medicine","technology","government_contract"],demand:["passengers","cars","arms","grain","textiles","luxury_goods"]}],metaProducts:[{name:"passengers",value:10,weight:1},{name:"grain",value:24,weight:2},{name:"corn",value:26,weight:2},{name:"textiles",value:20,weight:2},{name:"fish",value:18,weight:2},{name:"beer",value:20,weight:2},{name:"paper",value:18,weight:2},{name:"ore",value:45,weight:4},{name:"coal",value:50,weight:4},{name:"steel",value:95,weight:8},{name:"cars",value:110,weight:8},{name:"arms",value:65,weight:4},{name:"medicine",value:65,weight:4},{name:"technology",value:75,weight:4},{name:"luxury_goods",value:40,weight:2},{name:"government_contract",value:50,weight:2}],metaTrains:[{name:"languidade",cost:150,maintenance:15,speed:100,cargoSpace:3},{name:"mediann",cost:250,maintenance:20,speed:145,cargoSpace:4},{name:"boltify",cost:350,maintenance:20,speed:175,cargoSpace:6}],fixed:{idCharacters:"abcdef0123456789",idLength:64,emptyCoordinate:-200,earthRadius:6371,startGold:1e3,maxCityRoutes:{0:0,1:3,2:5,3:7,4:10,5:12,6:15},productType:{supply:0,demand:1,cargo:2},levels:{0:{maxDistance:0,turnCost:{0:0}},1:{maxDistance:150,turnCost:{100:2,150:3}},2:{maxDistance:250,turnCost:{150:1,250:2}},3:{maxDistance:300,turnCost:{150:1,250:2,300:3}}},queue:{route:0,turnCost:1,nameMap:{0:"Route",1:"Turn Cost"}},potentialRoute:{city:0,distance:1,goldCost:2,turnCost:3,nameMap:{0:"City",1:"Distance",2:"Gold Cost",3:"Turn Cost"}},cargo:{from:0,to:1,nameMap:{0:"From City Cargo",1:"To City Cargo"}},finance:{income:0,expense:1,turn:2,type:3,nameMap:{0:"Income",1:"Expense",2:"Turn"}},incomeType:{product:3,nameMap:{3:"Product"}},expenseType:{newRoute:0,editRoute:1,maintenance:2,nameMap:{0:"NEW ROUTE",1:"EDIT ROUTE",2:"MAINTENANCE"}},financeTypeNameMap:{0:"NEW ROUTE",1:"EDIT ROUTE",2:"MAINTENANCE",3:"PRODUCT"}}}},{}],5:[function(e,t,s){const{fixed:n}=e("../../src/modules/constants.js"),{is:r,does:a}=e("../../src/modules/utility.js"),{Component:i}=e("../../src/modules/component.js"),{City:o}=e("../../src/modules/city.js"),{Route:u}=e("../../src/modules/route.js"),{Train:c}=e("../../src/modules/train.js");class l extends i{constructor(e,t){super(e);let s=r.instance(t,o)?t:new o,a=1,i=1,c=n.startGold,l=n.levels[i].maxDistance,m=[],g=[],p=[],h={[n.finance.income]:[],[n.finance.expense]:[],[n.finance.turn]:a};this.getStartCity=(()=>s),this.getTotalTurns=(()=>a),this.getLevel=(()=>i),this.getGold=(()=>c),this.getMaxDistance=(()=>l),this.getQueue=(()=>m),this.getRoutes=(()=>g),this.getFinanceHistory=(()=>p),this.getCurrentFinance=(()=>h),this.addGold=(e=>{r.number(e)&&(c+=e)}),this.removeGold=(e=>{r.number(e)&&(c-=e)}),this.addToFinanceHistory=(e=>{r.object(e)&&p.push(e)}),this.setCurrentFinance=((e,t,s)=>{try{h[e].push([t,s])}catch(e){}}),this.removeCurrentFinance=((e,t)=>{for(let s=0;s<h[e].length;s++)h[e][s][0].isEqual(t)&&h[e].splice(s,1)}),this.saveCurrentFinance=(()=>{let e={[n.finance.income]:[...h[n.finance.income]],[n.finance.expense]:[...h[n.finance.expense]],[n.finance.turn]:a};p.push(e)}),this.clearCurrentFinance=(()=>{h[n.finance.income]=[],h[n.finance.expense]=[],h[n.finance.turn]=this.getTotalTurns()}),this.addToQueue=(e=>{r.object(e)&&e.hasOwnProperty(n.queue.route)&&e.hasOwnProperty(n.queue.turnCost)&&(e[n.queue.route].isInArray(m)||(this.setCurrentFinance(n.finance.expense,e[n.queue.route],n.expenseType.newRoute),m.push(e)))}),this.removeFromQueue=(e=>{if(m.length>0&&r.object(e)&&e.hasOwnProperty(n.queue.route)&&e.hasOwnProperty(n.queue.turnCost))for(let t=0;t<m.length;t++)e[n.queue.route].isEqual(m[t][n.queue.route])&&(this.removeCurrentFinance(n.finance.expense,e[n.queue.route]),m.splice(t,1))}),this.addRoute=(e=>{r.instance(e,u)&&!e.isInArray(g)&&g.push(e)}),this.removeRoute=(e=>{if(r.instance(e,u)&&g.length>0)for(let t=0;t<g.length;t++)e.isEqual(g[t])&&g.splice(t,1)}),this.incrementTotalTurns=(()=>a++),this.incrementLevel=(()=>{n.levels.hasOwnProperty(i+1)&&(i++,l=n.levels[i].maxDistance)})}getTurnCost(e){const t=this.getLevel();let s=0;if(r.number(e)&&n.levels.hasOwnProperty(t)){const a=n.levels[t],[i,o,u]=Object.keys(a.turnCost).map(e=>parseInt(e));r.number(i)&&e<=i&&(s=a.turnCost[i]),r.number(i)&&r.number(o)&&e>i&&e<=o&&(s=a.turnCost[o]),r.number(i)&&r.number(o)&&r.number(u)&&e>i&&e>o&&e<=u&&(s=a.turnCost[u])}return s}getArrayOfRouteableCities(e,t){const s=[];if(r.instance(e,o)&&!e.isMaxRoutesReached()&&a.arrayOnlyContainSingleType(t,o)){let r=1/0;for(let a=0;a<t.length;a++){let i=t[a];if(!e.isEqual(i)&&!i.isMaxRoutesReached()){let t=e.distanceTo(i);if(t<=this.getMaxDistance()&&2*t<=this.getGold()){let e={[n.potentialRoute.city]:i,[n.potentialRoute.distance]:t,[n.potentialRoute.goldCost]:2*t,[n.potentialRoute.turnCost]:this.getTurnCost(t)};t<r?(r=t,s.unshift(e)):s.push(e)}}}}return s}getArrayOfRoutedCities(){const e=this.getRoutes(),t=[this.getStartCity()];if(e.length>0){let s=[this.getStartCity().getID()];for(let n=0;n<e.length;n++){let r=e[n].getTo();s.includes(r.getID())||r.isMaxRoutesReached()||(s.push(r.getID()),t.push(r))}}return t}handleQueue(){const e=this.getQueue();if(e.length>0)for(let t=0;t<e.length;t++){let s=e[t][n.queue.route];e[t][n.queue.turnCost]>1?e[t][n.queue.turnCost]--:(this.removeFromQueue(e[t]),this.addRoute(s))}}handleRoutes(){const e=this.getRoutes();if(e.length>0)for(let t=0;t<e.length;t++){let s=e[t];s.moveTrain(),this.setCurrentFinance(n.finance.expense,s,n.expenseType.maintenance),0===s.getCurrentDistance()&&(this.setCurrentFinance(n.finance.income,s,n.incomeType.product),s.setCurrentCity(),s.setCargo())}}handleRouteFinance(){const e=this.getCurrentFinance(),[t,s]=[e[n.finance.income],e[n.finance.expense]];if(t.length>0)for(let e=0;e<t.length;e++){let s=t[e][0].getCurrentCargo();for(let n=0;n<s.length;n++)t[e][0].getCurrentCity().productInCityDemand(s[n])&&this.addGold(s[n].getValue())}if(s.length>0)for(let e=0;e<s.length;e++)this.removeGold(s[e][0].getTrain().getMaintenance())}static empty(){return new l}}t.exports={Player:l}},{"../../src/modules/city.js":2,"../../src/modules/component.js":3,"../../src/modules/constants.js":4,"../../src/modules/route.js":7,"../../src/modules/train.js":8,"../../src/modules/utility.js":9}],6:[function(e,t,s){const{metaProducts:n}=e("../../src/modules/constants.js"),{is:r,does:a,provide:i}=e("../../src/modules/utility.js"),{Component:o}=e("../../src/modules/component.js");class u extends o{constructor(e,t,s){super(r.string(e)?e.split("_").map(e=>i.capitalization(e)).join(" "):"");let n=r.number(s)?s:0,a=r.number(t)?t:0;this.getValue=(()=>a),this.getWeight=(()=>n),this.setValue=(e=>{r.number(e)&&(a=e)})}toString(){return" "+this.getName()}static generateArray(e=n){const t=[];if(r.array(e))for(let s=0;s<e.length;s++){let n=e[s];t.push(new u(n.name,n.value,n.weight))}return t}static matchStringWithProductName(e,t){const s=[];if(r.array(e)&&r.array(t)&&a.arrayOnlyContainSingleType(t,u))for(let n=0;n<e.length;n++){let r=e[n];for(let e=0;e<t.length;e++){let n=t[e];r.toUpperCase()===n.getName().toUpperCase()&&s.push(n)}}return s}static empty(){return new u}}t.exports={Product:u}},{"../../src/modules/component.js":3,"../../src/modules/constants.js":4,"../../src/modules/utility.js":9}],7:[function(e,t,s){const{fixed:n}=e("../../src/modules/constants.js"),{is:r,does:a}=e("../../src/modules/utility.js"),{Component:i}=e("../../src/modules/component.js"),{Product:o}=e("../../src/modules/product.js"),{City:u}=e("../../src/modules/city.js"),{Train:c}=e("../../src/modules/train.js");class l extends i{constructor(e,t,s,a,i,o){let l="";r.instance(e,u)&&r.instance(t,u)&&(l=`${e.getName()} <=> ${t.getName()}`),super(l);let m=""!==l?e:new u,g=""!==l?t:new u,p=s,h=r.instance(a,c)?a:new c,d=r.number(i)?i:0,y=r.number(o)?o:0,C=m,f=d;this.getFrom=(()=>m),this.getTo=(()=>g),this.getCargo=(()=>p),this.getTrain=(()=>h),this.getDistance=(()=>d),this.getCost=(()=>y),this.getCurrentCity=(()=>C),this.getCurrentDistance=(()=>f),this.setCurrentCity=(()=>{C=C.isEqual(m)?g:m,f=d}),this.setCargo=(()=>{C.isEqual(m)?h.setCargo(p[n.cargo.to]):h.setCargo(p[n.cargo.from])}),this.getCurrentCargo=(()=>h.getCargo()),this.removeFromCurrentDistance=(e=>{f=(f-=e)<0?0:f}),this.setCargo()}isInCity(){return this.getCurrentDistance()===this.getDistance()}isSameRoute(e){return!!r.instance(e,l)&&(this.getFrom().isEqual(e.getFrom())&&this.getTo().isEqual(e.getTo())||this.getFrom().isEqual(e.getTo())&&this.getTo().isEqual(e.getFrom()))}moveTrain(){this.removeFromCurrentDistance(this.getTrain().getSpeed())}isInArray(e){if(r.array(e))for(let t=0;t<e.length;t++)if(this.isEqual(e[t]))return!0;return!1}static empty(){return new l}}t.exports={Route:l}},{"../../src/modules/city.js":2,"../../src/modules/component.js":3,"../../src/modules/constants.js":4,"../../src/modules/product.js":6,"../../src/modules/train.js":8,"../../src/modules/utility.js":9}],8:[function(e,t,s){const{metaTrains:n}=e("../../src/modules/constants.js"),{is:r,does:a}=e("../../src/modules/utility.js"),{Component:i}=e("../../src/modules/component.js"),{Product:o}=e("../../src/modules/product.js");class u extends i{constructor(e,t,s,n,i){super(e);let u=r.number(t)?t:0,c=r.number(s)?s:0,l=r.number(n)?n:0,m=r.number(i)?i:0,g=[];this.getCost=(()=>u),this.getMaintenance=(()=>c),this.getSpeed=(()=>l),this.getCargoSpace=(()=>m),this.getCargo=(()=>g),this.setCargo=(e=>{if(e.length>0&&a.arrayOnlyContainSingleType(e,o)){let t=e.map(e=>e.getWeight()).reduce((e,t)=>e+t);m>=t&&(g=e)}})}static generateArray(){const e=[];for(let t=0;t<n.length;t++){let s=n[t];e.push(new u(s.name,s.cost,s.maintenance,s.speed,s.cargoSpace))}return e}static empty(){return new u}}t.exports={Train:u}},{"../../src/modules/component.js":3,"../../src/modules/constants.js":4,"../../src/modules/product.js":6,"../../src/modules/utility.js":9}],9:[function(e,t,s){const{fixed:n}=e("../../src/modules/constants.js"),r={instance:(e,t)=>e&&t&&e instanceof t,string:e=>e&&"string"==typeof e,bool:e=>e&&"boolean"==typeof e,object:e=>e&&"object"==typeof e,array:e=>r.object(e)&&Array.isArray(e),date:e=>r.object(e)&&e instanceof Date,number:e=>"number"==typeof e&&!Number.isNaN(e),function:e=>e&&"function"==typeof e,HTMLElement:e=>r.instance(e,HTMLElement),HTMLElements:(...e)=>!!r.array(e)&&(e.forEach(e=>{if(!r.HTMLElement(e))return!1}),!0)},a={radianFromDegree:e=>r.number(e)?e*Math.PI/180:NaN,capitalization:e=>r.string(e)?e.replace(e.charAt(0),e.charAt(0).toUpperCase()):e,startCity:(e,t)=>{if(r.array(e)&&r.array(t))for(let s=0;s<e.length;s++){let n=e[s];if(n.isStartCity&&!t.includes(n))return n}}},i={objectsContainProperty:(e,t)=>(r.array(e)&&t&&e.forEach(e=>{if(!e.hasOwnProperty(t))return!1}),!0),arrayOnlyContainSingleType:(e,t)=>!(!r.array(e)||!t)&&(e.forEach(e=>{if(!r.instance(e,t))return!1}),!0)},o={id:()=>{let e="";for(let t=0;t<n.idLength;t++)e+=n.idCharacters.charAt(Math.floor(Math.random()*n.idCharacters.length));return e}};t.exports={is:r,provide:a,does:i,create:o}},{"../../src/modules/constants.js":4}]},{},[1]);